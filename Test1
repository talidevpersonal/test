import React from "react";
import dayjs from "dayjs";

// Sample meeting interface
interface Meeting {
  id: number;
  title: string;
  startTime: string;  // Example: "2025-01-20T09:30"
  endTime: string;    // Example: "2025-01-20T10:15"
}

// Sample meetings data
const meetings: Meeting[] = [
  { id: 1, title: "Meeting 1", startTime: "2025-01-20T09:00", endTime: "2025-01-20T09:45" },
  { id: 2, title: "Meeting 2", startTime: "2025-01-20T09:30", endTime: "2025-01-20T10:00" },
  { id: 3, title: "Meeting 3", startTime: "2025-01-20T10:00", endTime: "2025-01-20T10:30" },
];

// Function to detect overlapping meetings
const processOverlappingMeetings = (meetings: Meeting[]) => {
  // Sort meetings by start time
  const sortedMeetings = meetings.sort((a, b) =>
    dayjs(a.startTime).isBefore(dayjs(b.startTime)) ? -1 : 1
  );

  const arrangedMeetings: Array<Array<Meeting>> = [];

  sortedMeetings.forEach((meeting) => {
    let placed = false;
    for (const group of arrangedMeetings) {
      // Check if there's an overlap
      const lastMeetingInGroup = group[group.length - 1];
      if (dayjs(meeting.startTime).isAfter(dayjs(lastMeetingInGroup.endTime))) {
        group.push(meeting);
        placed = true;
        break;
      }
    }
    if (!placed) {
      arrangedMeetings.push([meeting]);
    }
  });

  return arrangedMeetings;
};

const CalendarView = () => {
  const groupedMeetings = processOverlappingMeetings(meetings);

  return (
    <div style={{ position: "relative", width: "100%", padding: "20px", border: "1px solid #ccc" }}>
      <h3>Weekly Calendar</h3>
      <div style={{ display: "grid", gridTemplateColumns: "1fr", gap: "10px" }}>
        {groupedMeetings.map((meetingGroup, index) => (
          <div key={index} style={{ display: "flex", position: "relative" }}>
            {meetingGroup.map((meeting) => {
              const start = dayjs(meeting.startTime);
              const end = dayjs(meeting.endTime);
              const duration = end.diff(start, "minute");

              return (
                <div
                  key={meeting.id}
                  style={{
                    position: "absolute",
                    top: `${start.hour() * 60 + start.minute()}px`,  // Position based on start time
                    height: `${duration}px`,
                    width: `${100 / meetingGroup.length}%`,
                    backgroundColor: "lightblue",
                    border: "1px solid #007bff",
                    marginLeft: `${meetingGroup.indexOf(meeting) * 50}px`,
                    padding: "5px",
                  }}
                >
                  {meeting.title} ({start.format("HH:mm")} - {end.format("HH:mm")})
                </div>
              );
            })}
          </div>
        ))}
      </div>
    </div>
  );
};

export default CalendarView;

