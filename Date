import React from "react";
import { Box, Typography, Card, Switch, Button } from "@mui/material";

const DesktopCalendar = () => {
  // Mock data for the meetings
  const meetings = [
    {
      id: 1,
      title: "MAF - Teams meeting",
      time: "10:00 AM",
      day: "Mon",
      needsReport: true,
      type: "Teams",
    },
    {
      id: 2,
      title: "Emirates Airlines - In-person",
      time: "11:00 AM",
      day: "Mon",
      needsReport: true,
      type: "In-person",
    },
    {
      id: 3,
      title: "Dubai Holding (Nakheel Discussion)",
      time: "1:00 PM",
      day: "Wed",
      needsReport: false,
      type: "Discussion",
    },
  ];

  const days = ["Mon", "Tue", "Wed", "Thu", "Fri"];
  const timeSlots = [
    "9:00 AM",
    "10:00 AM",
    "11:00 AM",
    "12:00 PM",
    "1:00 PM",
    "2:00 PM",
  ];

  return (
    <Box sx={{ width: "100%", p: 2 }}>
      <Box
        sx={{
          display: "grid",
          gridTemplateColumns: "100px repeat(5, 1fr)",
          gap: "1px",
          borderBottom: "1px solid #ddd",
        }}
      >
        {/* Header */}
        <Box />
        {days.map((day) => (
          <Typography
            key={day}
            variant="h6"
            align="center"
            sx={{ backgroundColor: "#f4f4f4", padding: "10px" }}
          >
            {day}
          </Typography>
        ))}
      </Box>

      {/* Time Slots */}
      <Box
        sx={{
          display: "grid",
          gridTemplateColumns: "100px repeat(5, 1fr)",
          gap: "1px",
        }}
      >
        {timeSlots.map((time, rowIndex) => (
          <React.Fragment key={time}>
            {/* Time Column */}
            <Box
              sx={{
                textAlign: "center",
                padding: "10px",
                backgroundColor: "#f4f4f4",
                border: "1px solid #ddd",
              }}
            >
              <Typography variant="body2">{time}</Typography>
            </Box>

            {/* Calendar Cells */}
            {days.map((day) => (
              <Box
                key={`${day}-${rowIndex}`}
                sx={{
                  minHeight: "100px",
                  border: "1px solid #ddd",
                  position: "relative",
                }}
              >
                {/* Render Meeting Cards */}
                {meetings
                  .filter(
                    (m) =>
                      m.day === day &&
                      m.time === time
                  )
                  .map((meeting) => (
                    <Card
                      key={meeting.id}
                      sx={{
                        p: 1,
                        mb: 1,
                        backgroundColor:
                          meeting.type === "Teams" ? "#e0f7fa" : "#fffde7",
                        borderLeft: "5px solid #007bff",
                      }}
                    >
                      <Typography variant="body2" fontWeight="bold">
                        {meeting.title}
                      </Typography>
                      <Typography variant="caption" color="textSecondary">
                        {meeting.type}
                      </Typography>
                      <Box display="flex" alignItems="center" mt={1}>
                        <Switch
                          checked={meeting.needsReport}
                          size="small"
                          disabled
                        />
                        <Typography variant="caption">
                          Needs call report
                        </Typography>
                      </Box>
                      <Button
                        size="small"
                        variant="outlined"
                        sx={{ mt: 1 }}
                      >
                        {meeting.needsReport ? "Call report" : "Edit draft"}
                      </Button>
                    </Card>
                  ))}
              </Box>
            ))}
          </React.Fragment>
        ))}
      </Box>
    </Box>
  );
};

export default DesktopCalendar;
