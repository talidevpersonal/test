import React from "react";
import { Paper, Typography, Button } from "@mui/material";
import AddIcon from "@mui/icons-material/Add";

const Widget = ({ widget, onReplace }) => {
  return (
    <Paper sx={{ padding: 2, border: "2px dashed #1976d2", textAlign: "center" }}>
      <Typography variant="h6">{widget.title}</Typography>
      <Typography variant="body2">{widget.content}</Typography>
      <Button
        startIcon={<AddIcon />}
        onClick={onReplace}
        sx={{ marginTop: 1 }}
        variant="outlined"
      >
        Replace
      </Button>
    </Paper>
  );
};

export default Widget;

import React from "react";
import { Box, Drawer, Paper, Typography, IconButton } from "@mui/material";
import CloseIcon from "@mui/icons-material/Close";

const WidgetList = ({ open, onClose, widgets, onSelect }) => {
  return (
    <Drawer anchor="right" open={open} onClose={onClose}>
      <Box sx={{ width: 300, padding: 2 }}>
        <Box display="flex" justifyContent="space-between">
          <Typography variant="h6">Select Widget</Typography>
          <IconButton onClick={onClose}>
            <CloseIcon />
          </IconButton>
        </Box>
        {widgets.map((widget) => (
          <Paper
            key={widget.id}
            sx={{
              padding: 2,
              marginY: 1,
              backgroundColor: "white",
              cursor: "pointer",
              "&:hover": { backgroundColor: "#f0f0f0" },
            }}
            onClick={() => onSelect(widget)}
          >
            <Typography variant="body1">{widget.title}</Typography>
          </Paper>
        ))}
      </Box>
    </Drawer>
  );
};

export default WidgetList;


import React, { useState } from "react";
import { Box, Button, Grid } from "@mui/material";
import Widget from "./Widget";
import WidgetList from "./WidgetList";

const allWidgets = [
  { id: "revenue", title: "Revenue", content: "Revenue Data" },
  { id: "utilization", title: "Avg. Limit Utilization", content: "Utilization Data" },
  { id: "liability", title: "Avg. Liability Balance", content: "Liability Data" },
  { id: "pipeline", title: "Pipeline", content: "Pipeline Data" },
];

const Dashboard = () => {
  const [dashboardWidgets, setDashboardWidgets] = useState([
    { id: "revenue", title: "Revenue", content: "Revenue Data" },
    { id: "utilization", title: "Avg. Limit Utilization", content: "Utilization Data" },
  ]);

  const [drawerOpen, setDrawerOpen] = useState(false);
  const [selectedIndex, setSelectedIndex] = useState(null);

  const handleOpenDrawer = (index) => {
    setSelectedIndex(index);
    setDrawerOpen(true);
  };

  const handleSelectWidget = (widget) => {
    if (selectedIndex !== null) {
      const newWidgets = [...dashboardWidgets];
      newWidgets[selectedIndex] = widget;
      setDashboardWidgets(newWidgets);
      setSelectedIndex(null);
      setDrawerOpen(false);
    }
  };

  return (
    <Box sx={{ padding: 3 }}>
      <Button variant="contained" onClick={() => setDrawerOpen(true)}>Customize</Button>

      <Grid container spacing={2} sx={{ marginTop: 3 }}>
        {dashboardWidgets.map((widget, index) => (
          <Grid item xs={12} sm={6} key={index}>
            <Widget widget={widget} onReplace={() => handleOpenDrawer(index)} />
          </Grid>
        ))}
      </Grid>

      <WidgetList open={drawerOpen} onClose={() => setDrawerOpen(false)} widgets={allWidgets} onSelect={handleSelectWidget} />
    </Box>
  );
};

export default Dashboard;


