import React from "react";
import { Box, Drawer, Typography, IconButton } from "@mui/material";
import CloseIcon from "@mui/icons-material/Close";

const widgetList = [
  { id: "revenue", title: "Revenue" },
  { id: "utilization", title: "Avg. Limit Utilization" },
  { id: "liability", title: "Avg. Liability Balance" },
  { id: "pipeline", title: "Pipeline" },
];

const WidgetList = ({ open, onClose, onSelect }) => {
  return (
    <Drawer anchor="right" open={open} onClose={onClose}>
      <Box sx={{ width: 300, padding: 2 }}>
        <Box display="flex" justifyContent="space-between">
          <Typography variant="h6">Select Widget</Typography>
          <IconButton onClick={onClose}>
            <CloseIcon />
          </IconButton>
        </Box>
        {widgetList.map((widget) => (
          <div
            key={widget.id}
            style={{
              padding: "16px",
              margin: "8px 0",
              backgroundColor: "#fff",
              borderRadius: "8px",
              cursor: "pointer",
              border: "1px solid #ddd",
              textAlign: "center",
            }}
            onClick={() => onSelect(widget)}
          >
            <Typography variant="body1">{widget.title}</Typography>
          </div>
        ))}
      </Box>
    </Drawer>
  );
};

export default WidgetList;

import React, { useEffect, useState } from "react";
import { Typography } from "@mui/material";

const RevenueWidget = () => {
  const [data, setData] = useState(null);

  useEffect(() => {
    fetch("/api/revenue") // Replace with actual API
      .then((res) => res.json())
      .then((data) => setData(data))
      .catch((err) => console.error("Error fetching revenue:", err));
  }, []);

  return (
    <div style={{ padding: "16px", border: "2px dashed #1976d2", borderRadius: "8px" }}>
      <Typography variant="h6">Revenue</Typography>
      {data ? <Typography variant="body2">{data.amount} M</Typography> : "Loading..."}
    </div>
  );
};

export default RevenueWidget;

import React, { useEffect, useState } from "react";
import { Typography } from "@mui/material";

const UtilizationWidget = () => {
  const [data, setData] = useState(null);

  useEffect(() => {
    fetch("/api/utilization") // Replace with actual API
      .then((res) => res.json())
      .then((data) => setData(data))
      .catch((err) => console.error("Error fetching utilization:", err));
  }, []);

  return (
    <div style={{ padding: "16px", border: "2px dashed #1976d2", borderRadius: "8px" }}>
      <Typography variant="h6">Avg. Limit Utilization</Typography>
      {data ? <Typography variant="body2">{data.percentage}%</Typography> : "Loading..."}
    </div>
  );
};

export default UtilizationWidget;

import React, { useEffect, useState } from "react";
import { Typography } from "@mui/material";

const LiabilityWidget = () => {
  const [data, setData] = useState(null);

  useEffect(() => {
    fetch("/api/liability") // Replace with actual API
      .then((res) => res.json())
      .then((data) => setData(data))
      .catch((err) => console.error("Error fetching liability:", err));
  }, []);

  return (
    <div style={{ padding: "16px", border: "2px dashed #1976d2", borderRadius: "8px" }}>
      <Typography variant="h6">Avg. Liability Balance</Typography>
      {data ? <Typography variant="body2">{data.balance} B</Typography> : "Loading..."}
    </div>
  );
};

export default LiabilityWidget;

import React, { useState } from "react";
import { Box, Button, Grid } from "@mui/material";
import WidgetList from "./WidgetList";

// Import widgets
import RevenueWidget from "./widgets/RevenueWidget";
import UtilizationWidget from "./widgets/UtilizationWidget";
import LiabilityWidget from "./widgets/LiabilityWidget";

const widgetComponents = {
  revenue: RevenueWidget,
  utilization: UtilizationWidget,
  liability: LiabilityWidget,
};

const Dashboard = () => {
  const [dashboardWidgets, setDashboardWidgets] = useState([
    { id: "revenue" },
    { id: "utilization" },
  ]);

  const [drawerOpen, setDrawerOpen] = useState(false);
  const [selectedIndex, setSelectedIndex] = useState(null);

  const handleOpenDrawer = (index) => {
    setSelectedIndex(index);
    setDrawerOpen(true);
  };

  const handleSelectWidget = (widget) => {
    if (selectedIndex !== null) {
      const newWidgets = [...dashboardWidgets];
      newWidgets[selectedIndex] = { id: widget.id };
      setDashboardWidgets(newWidgets);
      setSelectedIndex(null);
      setDrawerOpen(false);
    }
  };

  return (
    <Box sx={{ padding: 3 }}>
      <Button variant="contained" onClick={() => setDrawerOpen(true)}>Customize</Button>

      <Grid container spacing={2} sx={{ marginTop: 3 }}>
        {dashboardWidgets.map((widget, index) => {
          const WidgetComponent = widgetComponents[widget.id];
          return (
            <Grid item xs={12} sm={6} key={index} onClick={() => handleOpenDrawer(index)}>
              {WidgetComponent ? <WidgetComponent /> : null}
            </Grid>
          );
        })}
      </Grid>

      <WidgetList open={drawerOpen} onClose={() => setDrawerOpen(false)} onSelect={handleSelectWidget} />
    </Box>
  );
};

export default Dashboard;

